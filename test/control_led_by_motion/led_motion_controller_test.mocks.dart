// Mocks generated by Mockito 5.0.17 from annotations
// in iot_app/test/control_led_by_motion/led_motion_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:flutter/widgets.dart' as _i3;
import 'package:iot_app/esp_sensors/esp_service/esp_service.dart' as _i2;
import 'package:iot_app/esp_sensors/esp_store/leds_store/leds_store.dart'
    as _i4;
import 'package:iot_app/esp_sensors/models/led.dart' as _i5;
import 'package:iot_app/motion_sensor/motion_sensor_controller.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEspService_0 extends _i1.Fake implements _i2.EspService {}

class _FakeValueNotifier_1<T> extends _i1.Fake implements _i3.ValueNotifier<T> {
}

/// A class which mocks [LedsStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockLedsStore extends _i1.Mock implements _i4.LedsStore {
  MockLedsStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.EspService get espService =>
      (super.noSuchMethod(Invocation.getter(#espService),
          returnValue: _FakeEspService_0()) as _i2.EspService);
  @override
  _i3.ValueNotifier<_i3.Widget> get ledListView =>
      (super.noSuchMethod(Invocation.getter(#ledListView),
              returnValue: _FakeValueNotifier_1<_i3.Widget>())
          as _i3.ValueNotifier<_i3.Widget>);
  @override
  set ledListView(_i3.ValueNotifier<_i3.Widget>? _ledListView) =>
      super.noSuchMethod(Invocation.setter(#ledListView, _ledListView),
          returnValueForMissingStub: null);
  @override
  set leds(List<_i3.ValueNotifier<_i5.Led>>? _leds) =>
      super.noSuchMethod(Invocation.setter(#leds, _leds),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> fetch() => (super.noSuchMethod(Invocation.method(#fetch, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> updateLedStatus(_i3.ValueNotifier<_i5.Led>? notifier) =>
      (super.noSuchMethod(Invocation.method(#updateLedStatus, [notifier]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
}

/// A class which mocks [MotionSensor].
///
/// See the documentation for Mockito's code generation for more information.
class MockMotionSensor extends _i1.Mock implements _i7.MotionSensor {
  MockMotionSensor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<List<double>> get accelerometer => (super.noSuchMethod(
      Invocation.getter(#accelerometer),
      returnValue: Stream<List<double>>.empty()) as _i6.Stream<List<double>>);
}
